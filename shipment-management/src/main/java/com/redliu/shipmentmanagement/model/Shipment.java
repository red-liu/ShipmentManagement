package com.redliu.shipmentmanagement.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.baomidou.mybatisplus.annotation.TableField;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.redliu.shipmentmanagement.repository.ShipmentRepository;

@JsonIgnoreProperties(value = { "op" })
public class Shipment {

    public Shipment(){

    }
    // shipment id
    private Long shipmentid;

    // this shipment is generated by initial, split or merge
    private Short op;

    private Integer opcount;

    private Integer quantity;

    public Long getTradeid() {
        return tradeid;
    }

    public void setTradeid(Long tradeid) {
        this.tradeid = tradeid;
    }

    private Long tradeid;

    @TableField(exist = false)
    private String operator;

    public String getOperator() {
        return ShipmentOperator.values()[this.op].toString();
    }

    public void setOperator(String operator) {
        this.operator = operator;
        this.op = (short)ShipmentOperator.valueOf(operator).ordinal();
    }

    // record child shipment
    private List<Shipment> child = new ArrayList<>();


    public Shipment(Long shipmentid) {
        this.shipmentid = shipmentid;
    }

    public Long getShipmentid() {
        return shipmentid;
    }

    public  Short getOp() {
        return op;
    }

    public Integer getQuantity() {
        return quantity;
    }

    public List<Shipment> getChild() {
        return child;
    }

    public void setShipmentid(Long shipmentid) {
        this.shipmentid = shipmentid;
    }

    public void setOp(Short op) {
        this.op = op;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public void setChild(List<Shipment> child) {
        this.child = child;
    }

    public Integer getOpcount() {
        return opcount;
    }

    public void setOpcount(Integer opcount) {
        this.opcount = opcount;
    }



    @Override
    public String toString() {

        ObjectMapper objectMapper = new ObjectMapper();
        try {
            String json = objectMapper.writeValueAsString(this);
            return json;

        }catch (Exception e){
            e.printStackTrace();
        }
        return "";
    }



}
